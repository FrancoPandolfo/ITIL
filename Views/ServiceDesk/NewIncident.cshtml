@using ITIL.Data.Domain;
@model IEnumerable<ConfigurationItem>

<style>
    body {
        background-image: url("https://www.fair-computer.de/wp-content/uploads/adobestock_280046195.jpg");
        background-repeat: no-repeat;
        background-size: cover;
        background-position: center center;
        height: 100vh;
        margin: 0;
        padding: 0;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    form {
        background-color: white;
        padding: 20px;
        border: 1px solid #ccc;
        border-radius: 5px;
        width: 400px;
        height: fit-content;
    }

    h1 {
        text-align: center;
        margin-top: 0;
    }

    label {
        display: block;
        margin-bottom: 10px;
    }

    input[type="text"],
    textarea {
        width: 100%;
        padding: 10px;
        font-size: 16px;
        border-radius: 3px;
        border: 1px solid #ccc;
    }

    .new-incident-button {
        display: inline-block;
        padding: 10px 20px;
        font-size: 16px;
        text-decoration: none;
        background-color: #3012a7;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

    .new-incident-button:hover {
        background-color: #250a91;
    }

    .volver-link {
        color: #000;
        text-decoration: none;
        font-size: 16px;
    }

    .error-message {
        color: red;
    }

    .user-links {
        position: absolute;
        top: 20px;
        right: 20px;
    }

    .login-effect {
        position: relative;
    }

     .login-spinner {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        display: none;
        width: 160px; /* Adjust the width as desired */
        height: 160px; /* Adjust the height as desired */
    }

    .login-effect.login-in-progress .login-spinner {
        display: block;
    }
</style>

<div class="user-links">
    @if (User.Identity.IsAuthenticated)
    {
        <span>@User.Identity.Name</span>
    }
    <a class="volver-link" href="/ServiceDesk/Incidents">Volver</a>
</div>

<form method="post" id="incident-form">
    <h1>Nuevo Incidente</h1>

    <div class="form-group">
        <label for="Title">Título</label>
        <input type="text" id="Title" name="Title" class="form-control" />
    </div>

    @if (Model.Any())
    {
        <div class="form-group">
            <label for="ConfigItem">Item afectado:</label>
            <select name="ConfigItem" id="ConfigItem">
                @foreach (var item in Model)
                {
                    <option value=@item.Id>@item.Title</option>
                }
            </select>
        </div>
    }

    <div class="form-group">
        <label for="Description">Descripción</label>
        <textarea id="Description" name="Description" class="form-control" rows="5"></textarea>
    </div>

    <div class="form-group">
        <label for="AssignedUser">Asignar a:</label>
        <select name="AssignedUser" id="AssignedUser">
            @foreach (var user in (IEnumerable<User>)ViewBag.Users)
            {
                <option value=@user.Id>@user.Email</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label for="ClientName">Nombre del Cliente</label>
        <input type="text" id="ClientName" name="ClientName" class="form-control" />
    </div>

    <div class="form-group">
        <label for="ClientEmail">Email del Cliente</label>
        <input type="text" id="ClientEmail" name="ClientEmail" class="form-control" />
    </div>

    <div class="form-group">
    <label for="Impact">Impacto</label>
    <select id="Impact" name="Impact" class="form-control">
        <option value="BAJO" selected>BAJO</option>
        <option value="MEDIO">MEDIO</option>
        <option value="ALTO">ALTO</option>
    </select>
    </div>

    <div class="form-group">
    <label for="Priority">Prioridad</label>
    <select id="Priority" name="Priority" class="form-control">
        <option value="BAJO" selected>BAJO</option>
        <option value="MEDIO">MEDIO</option>
        <option value="ALTO">ALTO</option>
    </select>
    </div>

    <div class="form-group">
        <label for="TrackingNumber">Número de seguimiento</label>
        <input type="text" id="TrackingNumber" name="TrackingNumber" class="form-control" />
    </div>

    <div class="form-group">
        <label for="RootCause">Causa raíz</label>
        <textarea id="RootCause" name="RootCause" class="form-control" rows="3"></textarea>
    </div>

    <button type="submit" class="new-incident-button login-effect">
        Crear
        <img class="login-spinner" src="https://icon-library.com/images/waiting-icon-gif/waiting-icon-gif-7.jpg" alt="Loading..." />
    </button>
</form>


<script>
    document.getElementById("incident-form").addEventListener("submit", function (e) {
        e.preventDefault();

        // Retrieve the userId from localStorage
        var userId = localStorage.getItem("user-id");

        // Check if userId is available
        if (userId) {
            localStorage.setItem("user-id", userId);
            var title = document.getElementById("Title").value;
            var description = document.getElementById("Description").value;
            var itemId = document.getElementById("ConfigItem").value;
            var trackingNumber = document.getElementById("TrackingNumber").value;
            var rootCause = document.getElementById("RootCause").value;
            var clientName = document.getElementById("ClientName").value;
            var clientEmail = document.getElementById("ClientEmail").value;
            var assignedUserId = document.getElementById("AssignedUser").value;
            var impact = document.getElementById("Impact").value;
            var priority = document.getElementById("Priority").value;

            var incident = {
                Title: title,
                Description: description,
                UserId: userId,
                ConfigurationItemId: itemId,
                TrackingNumber: trackingNumber,
                RootCause: rootCause,
                ClientName: clientName,
                ClientEmail: clientEmail,
                AssignedUserId: assignedUserId,
                Impact: impact,
                Priority: priority
            };

            // Include the userId in the request headers
            var headers = {
                "Content-Type": "application/json",
                "user-id": userId
            };

            // Show the spinner when the request is being made
            var spinner = document.querySelector(".login-spinner");
            spinner.style.display = "block";

            fetch("/ServiceDesk/SaveIncident", {
                method: "POST",
                headers: headers,
                body: JSON.stringify(incident)
            })
            .then(function (response) {
                if (response.ok) {
                    window.location.href = "/ServiceDesk/Incidents";
                } else {
                    showError("Failed to save the incident, response not ok.");
                }
                
                // Hide the spinner when the request is completed
                spinner.style.display = "none";
            })
            .catch(function () {
                showError("Failed to save the incident, function error.");

            // Hide the spinner when the request is completed
            spinner.style.display = "none";
            });
        } else {
            showError("User ID not found. Please log in again.");
        }
    });

    function showError(message) {
        var errorElement = document.createElement("p");
        errorElement.classList.add("error-message");
        errorElement.textContent = message;
        document.body.appendChild(errorElement);
    }
</script>