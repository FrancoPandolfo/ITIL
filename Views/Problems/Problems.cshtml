@using ITIL.Data.Domain;
@model IEnumerable<Problem>

@{
    ViewData["Title"] = "Problemas";
}

<style>
    table {
        border-collapse: collapse;
        width: 100%;
    }

    th, td {
        padding: 8px;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }

    tr:nth-child(even) {
        background-color: #f2f2f2;
    }

    .new-problem-button {
        display: inline-block;
        padding: 10px 20px;
        font-size: 16px;
        text-decoration: none;
        background-color: #3012a7;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

    .new-problem-button:hover {
        background-color: #250a91;
    }

    .volver-link {
        color: #000;
        text-decoration: none;
        font-size: 16px;
    }

    .user-links {
        position: absolute;
        top: 20px;
        right: 20px;
    }

    .button-link {
        display: inline-block;
        padding: 5px 10px;
        font-size: 12px;
        text-decoration: none;
        background-color: #3012a7;
        color: white;
        border: none;
        border-radius: 1px;
        cursor: pointer;
    }

    .button-link:hover {
        background-color: #250a91;
    }
</style>

<h1>@ViewData["Title"]</h1>

<a class="new-problem-button" href="/Problems/NewProblem">Nuevo Problema</a>

<div class="user-links">
    @if (User.Identity.IsAuthenticated)
    {
        <span>@User.Identity.Name</span>
    }
    <a class="volver-link" href="/Home/Index">Volver</a>
</div>

@if (Model.Any())
{
<table>
    <thead>
        <tr>
            <th>Title</th>
            <th>Description</th>
            <th>Created Date</th>
        </tr>
        <tr>
            <th><input type="text" id="filterProblemTitle" onkeyup="filterTable('ProblemTitle', this.value)" placeholder="Filter Title"></th>
            <th><input type="text" id="filterProblemDescription" onkeyup="filterTable('ProblemDescription', this.value)" placeholder="Filter Description"></th>
            <th><input type="text" id="filterProblemCreatedDate" onkeyup="filterTable('ProblemCreatedDate', this.value)" placeholder="Filter Created Date"></th>
        </tr>
    </thead>
    <tbody id="problemTableBody">
        @foreach (var problem in Model)
        {
            <tr>
                <td>@problem.Title</td>
                <td>@problem.Description</td>
                <td>@problem.CreatedDate</td>
                <td>
                    <a href="/Problems/@problem.Id" class="button-link">Edit</a>
                    <button class="button-link" type="button" onclick="confirmDeleteProblem(@problem.Id)">Delete</button>
                </td>
            </tr>
            <tr>
                <td colspan="3"><hr></td>
            </tr>
        }
    </tbody>
</table>
}
else
{
    <p>No problems found.</p>
}

<script>
    function confirmDeleteProblem(problemId) {
        if (confirm('Are you sure you want to delete this problem?')) {
            deleteProblem(problemId);
        }
    }

    function deleteProblem(problemId) {
        fetch('/Problems/DeleteProblem', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(problemId)
        })
        .then(response => {
            if (response.ok) {
                // Refresh the problem list or perform any other action
                window.location.reload();
            } else {
                console.error('Error deleting problem:', response.statusText);
            }
        })
        .catch(error => {
            console.error('Error deleting problem:', error);
        });
    }

    function filterTable(column, value) {
        var filterInput = value.toLowerCase();
        var tableBody = document.getElementById('problemTableBody');
        var rows = tableBody.getElementsByTagName('tr');

        for (var i = 0; i < rows.length; i++) {
            var row = rows[i];
            var cells = row.getElementsByTagName('td');
            var matched = false;

            for (var j = 0; j < cells.length; j++) {
            var cell = cells[j];
            var cellValue = cell.textContent || cell.innerText;

            if (cellValue.toLowerCase().indexOf(filterInput) > -1) {
                matched = true;
                break;
            }
            }

            if (matched) {
            row.style.display = '';
            } else {
            row.style.display = 'none';
            }
        }
    }
</script>