@using ITIL.Model
@{
    ViewData["Title"] = "Metricas";
}
<style>
    table {
        border-collapse: collapse;
        width: 100%;
    }

    th, td {
        padding: 8px;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }

    tr:nth-child(even) {
        background-color: #f2f2f2;
    }

    .new-metric-button {
        display: inline-block;
        padding: 10px 20px;
        font-size: 16px;
        text-decoration: none;
        background-color: #3012a7;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

    .new-metric-button:hover {
        background-color: #250a91;
    }

    .volver-link {
        color: #000;
        text-decoration: none;
        font-size: 16px;
    }

    .user-links {
        position: absolute;
        top: 20px;
        right: 20px;
    }

    .button-link {
        display: inline-block;
        padding: 5px 10px;
        font-size: 12px;
        text-decoration: none;
        background-color: #3012a7;
        color: white;
        border: none;
        border-radius: 1px;
        cursor: pointer;
    }

    .button-link:hover {
        background-color: #250a91;
    }

    .modal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.4);
    }

    .modal-content {
        background-color: #fefefe;
        margin: 10% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 80%;
        max-width: 600px;
    }

    .close {
        color: #888;
        float: right;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
    }

    .close:hover,
    .close:focus {
        color: #000;
        text-decoration: none;
        cursor: pointer;
    }

    .chart-container {
        width: 900px;
        height: 600px;
        margin-bottom: 20px;
    }
</style>

<h1>@ViewData["Title"]</h1>

<div class="user-links">
    @if (User.Identity.IsAuthenticated)
    {
        <span>@User.Identity.Name</span>
    }
    <a class="volver-link" href="/Home/Index">Volver</a>
</div>

<table>
    <thead>
        <tr>
            <th>Incidents Per Day</th>
            <th>Incidents Per Hour</th>
            <th>Hour With Most Incidents</th>
            <th>Day With Most Incidents</th>
            <th>Average Resolution Time</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td id="incidentsPerDay"></td>
            <td id="incidentsPerHour"></td>
            <td id="hourWithMostIncidents"></td>
            <td id="dayWithMostIncidents"></td>
            <td id="avgResolutionTime"></td>
        </tr>
    </tbody>
    <tr>
        <td colspan="5"><hr></td>
    </tr>
</table>

<div class="chart-container">
    <canvas id="incidentsPerDayChart"></canvas>
</div>
<div class="chart-container">
    <canvas id="incidentsPerHourChart"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    fetch('/Metrics/Incidents')
        .then(response => response.json())
        .then(data => {
            document.getElementById('incidentsPerDay').textContent = data.incidentsPerDay.join(', ');
            document.getElementById('incidentsPerHour').textContent = data.incidentsPerHour.join(', ');
            document.getElementById('hourWithMostIncidents').textContent = data.hourWithMostIncidents;
            document.getElementById('dayWithMostIncidents').textContent = data.dayWithMostIncidents;
            document.getElementById('avgResolutionTime').textContent = data.avgResolutionTime;

            // Create the incidents per day chart
            new Chart(document.getElementById("incidentsPerDayChart"), {
                type: "bar",
                data: {
                    labels: ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"],
                    datasets: [
                        {
                            label: "Incidents per Day",
                            data: [
                                    data.incidentsPerDay[1], // Monday
                                    data.incidentsPerDay[2], // Tuesday
                                    data.incidentsPerDay[3], // Wednesday
                                    data.incidentsPerDay[4], // Thursday
                                    data.incidentsPerDay[5], // Friday
                                    data.incidentsPerDay[6], // Saturday
                                    data.incidentsPerDay[0]  // Sunday
                                ],
                            backgroundColor: "rgba(75, 192, 192, 0.6)"
                        }
                    ]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true,
                            max: 1
                        }
                    }
                }
            });

            // Create the incidents per hour chart
            new Chart(document.getElementById("incidentsPerHourChart"), {
                type: "line",
                data: {
                    labels: Array.from({ length: 24 }, (_, i) => i),
                    datasets: [
                        {
                            label: "Incidents per Hour",
                            data: data.incidentsPerHour,
                            borderColor: "rgba(255, 99, 132, 1)",
                            backgroundColor: "rgba(255, 99, 132, 0.2)"
                        }
                    ]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true,
                            max: 1
                        }
                    }
                }
            });
        })
        .catch(error => console.log(error));
</script>

